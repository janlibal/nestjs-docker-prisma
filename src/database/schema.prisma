// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Status {
  id        Int        @id @default(autoincrement())
  title     String
  users     User[]
}

model User {
  id            String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  password      String
  email         String @unique
  statusId      Int   
  status        Status @relation(fields: [statusId], references: [id])
  sessions      Session[]
  quotes        Quote[]
}

model Quote {
  id     Int    @id @default(autoincrement())
  text   String
  userId String @db.Uuid
  user   User   @relation(fields: [userId], references: [id])
  tags   Tag[]
}

model Tag {
  id     Int     @id @default(autoincrement())
  name   String
  color  String
  quotes Quote[]
}

model Session {
  id         Int      @id @default(autoincrement())
  userId     String   @db.Uuid
  hash       String
  createdAt  DateTime? @default(now())
  expiresAt  DateTime?
  user       User     @relation(fields: [userId], references: [id])
}


model Post {
  id        Int       @id @default(autoincrement())
  title     String
  comments  Comment[]
}

model Comment {
  id      Int     @id @default(autoincrement())
  content String
  post    Post    @relation(fields: [postId], references: [id])
  postId  Int  
}

model Playlist {
  id            String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title         String
}

model Task {
  id            String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description   String
}
